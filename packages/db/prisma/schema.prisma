generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)

  accounts Account[]
  sessions Session[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model MenuCategory {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String?
  items       MenuItem[]  @relation("CategoryItems")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("menu_category")
}

model MenuItem {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  price       Float
  image       String?
  position    Int          @default(0)
  categoryId  Int
  category    MenuCategory @relation("CategoryItems", fields: [categoryId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt


  @@map("menu_item")
}
